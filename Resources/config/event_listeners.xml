<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="networking_init_cms.event_dispatcher"
                 class="Networking\InitCmsBundle\Component\EventDispatcher\CmsEventDispatcher"/>

        <service id="networking_init_cms.version_listener"
                 class="Networking\InitCmsBundle\Doctrine\Extensions\Versionable\VersionListener">
            <tag name="doctrine.event_listener" event="postUpdate" method="postUpdate"/>
            <tag name="doctrine.event_listener" event="postPersist" method="postPersist"/>
        </service>

        <service id="networking_init_cms.admin_tracker_listener"
                 class="Networking\InitCmsBundle\EventListener\AdminTrackerListener">
            <argument type="service" id="sonata.admin.pool"/>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="0"/>
        </service>

        <service id="networking_init_cms.locale_listener" class="Networking\InitCmsBundle\EventListener\LocaleListener">
            <argument type="service" id="security.access_map"/>
            <argument type="service" id="security.context"/>
            <argument>%networking_init_cms.page.languages%</argument>
            <argument>%kernel.default_locale%</argument>
            <argument type="service" id="router"/>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="33"/>
            <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"
                 priority="10"/>
        </service>

        <service id="networking_init_cms.event_listener.cache_cleaner" class="Networking\InitCmsBundle\EventListener\CacheCleaner">
            <call method="setPhpCache">
                <argument type="service" id="networking_init_cms.lib.php_cache"/>
            </call>
            <tag name="doctrine.event_listener" event="postPersist" />
            <tag name="doctrine.event_listener" event="postUpdate" />
            <tag name="doctrine.event_listener" event="postRemove" />
        </service>

    </services>
</container>