{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'NetworkingInitCmsBundle::empty_layout.html.twig' %}
{% set ckParameters = {'CKEditor': app.request.get('CKEditor'), 'CKEditorFuncNum': app.request.get('CKEditorFuncNum')} %}


{% set active_tab = app.request.get('context') %}
{% set provider = app.request.get('provider') %}

{% if not provider %}
    {% set urlParams = {'context' : active_tab, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% else %}
    {% set urlParams = {'context' : active_tab, 'provider' : provider, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
{% endif %}

{% block javascripts %}
    {{ parent() }}

    <script>
        $(function () {
            $(".select").click(function (e) {
                e.preventDefault();
                window.opener.CKEDITOR.tools.callFunction({{ app.request.get('CKEditorFuncNum')|escape('js') }}, $(this).attr("href"));
                window.close();
            });
        });
    </script>
{% endblock %}

{% block container_class %}container-fluid{% endblock %}
{% block preview %}{% endblock %}
{% block page_title %}
    <h1>{{ 'title.select_media'|trans({}, 'MediaAdmin')|replace({'%span%': '<span class="info-soft">', '%span/%': "</span>"})|raw }}</h1>
{% endblock %}

{% block list_filters %}
    {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
    {% if datagrid.filters %}
        <form action="{{ admin.generateUrl('init_ckeditor_browser') }}" method="GET"
              class="sonata-filter-form {{ admin.isChild and 1 == datagrid.filters|length ? 'hide' : '' }}form-horizontal filters menu-filter">

            <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
            {% if persistent_parameters.provider is defined %}
                <input type="hidden" name="provider" value="{{ persistent_parameters.provider }}"/>
            {% endif %}
            <input type="hidden" name="active_tab" value="{{ name }}"/>

            {% set filter_main = '' %}
            {% set filter_hidden = '' %}
            {% for filter in datagrid.filters if (filter.options.field_type != 'hidden' ) %}
                {% if filter.options.hidden is not defined  or (filter.options.hidden == false) %}
                    {% set filter_main %}
                    {{ filter_main }}
                    <div class="control-group">
                        <label for="{{ form.children[filter.formName].children['value'].vars.id }}"
                               class="control-label filter">{{ admin.trans(filter.label) }}</label>

                        <div>
                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium sonata-filter-option' }}
                            ) }}
                            {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'placeholder': admin.trans(filter.label), 'class': 'input-medium'} }) }}
                        </div>
                    </div>
                    {% endset %}
                {% else %}
                    {% set filter_hidden %}
                    {{ filter_hidden }}
                    <div class="control-group">
                        <label class="control-label filter {{ filter.isActive ? 'active' : 'inactive' }}"> {{ admin.trans(filter.label) }}</label>

                        <div>
                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium sonata-filter-option' }}
                            ) }}
                            {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'class': 'input-medium' }}
                            ) }}
                        </div>
                    </div>
                    {% endset %}
                {% endif %}
            {% endfor %}

            {#<strong>{{ 'label_filters'|trans({}, admin.translationDomain) }}</strong>#}
            {% set label = admin.label|trans({}, admin.translationDomain) %}
            <div>
                <div class="pull-left ">
                    <fieldset class="filter_legend">
                        <p class="info-soft">{{ 'info.filter'|trans({'%admin_label%':label }, 'NetworkingInitCmsBundle') }}</p>

                        <div class="filter_container row-fluid">
                            <div class="span12">
                                {{ filter_main }}
                                <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                                {% set foo = form.children['_page'].setRendered() %}
                                <div id="hidden_filters" class="collapse">
                                    {% for paramKey, paramValue in admin.persistentParameters %}
                                        <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                                    {% endfor %}
                                    {% if filter_hidden != '' %}
                                        {# add div with hidden / show function #}
                                        {{ filter_hidden }}
                                    {% endif %}
                                    {% set foo = form.children['_page'].setRendered() %}
                                </div>
                                <div>
                                    <input type="submit" class="btn btn-small"
                                           value="{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}"/>
                                    <a href="{{ admin.generateUrl('init_ckeditor_browser', {filters: 'reset'}|merge(ckParameters)) }}"
                                       class="link-underlined">
                                        {{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</a>
                                    {{ form_rest(form) }}
                                    {% if filter_hidden %}
                                        <span data-toggle="collapse" data-target="#hidden_filters" id="filter_toggle"
                                              class="filter-close cursor-pointer">
                                                {{ 'link.show_more_filters'|trans({}, 'NetworkingInitCmsBundle') }}
                                            </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                        {% for paramKey, paramValue in admin.persistentParameters|merge(ckParameters) %}
                            <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                        {% endfor %}
                    </fieldset>
                </div>
                <div class="clearfix">&nbsp;</div>
            </div>
        </form>
    {% endif %}
    <ul class="nav menu-tabs nav-tabs">
        {% for name, context in media_pool.contexts %}

            {% if context.providers|length == 0 %}
                {% set urlParams = {'context' : name, 'provider': null, 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% else %}
                {% set urlParams = {'context' : name, 'provider' : context.providers[0], 'active_tab' : persistent_parameters.context}|merge(ckParameters) %}
            {% endif %}

            {% if name == persistent_parameters.context %}
                <li class="active"><a
                            href="{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% else %}
                <li>
                    <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                </li>
            {% endif %}
        {% endfor %}
    </ul>
{% endblock %}

{% block list_table %}
            <div class="row-fluid">
                <div class="span12">
                    {# provider #}
                    {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
                    <div class="clearfix">&nbsp;</div>
                    <div class="row-fluid">
                        <div class="span6">
                            {% if providers|length > 1 %}
                                <strong>{{ "label.select_provider"|trans({}, 'MediaAdmin') }}</strong>

                                <div class="btn-group btn-group-sm">
                                    <a class="btn btn-sm btn-{{ persistent_parameters.provider ? 'default': 'primary' }}"
                                       href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': ''}) ) }}">{{ "link.all_providers"|trans({}, 'MediaAdmin') }}</a>
                                    {% for provider_name in providers %}
                                        <a class="btn btn-sm btn-{{ persistent_parameters.provider == provider_name? 'primary':'default' }}" href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge({'provider': provider_name})) }}">{{ provider_name|trans({}) }}</a>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>
                        <div class="span6 sort-buttons">
                            <strong>{{ 'label.sort_by'|trans({}, 'MediaAdmin') }}:</strong>
                            <div class="btn-group btn-group-sm">

                                {% for field_description in admin.list.elements %}
                                    {% if field_description.options.sortable is defined and field_description.options.sortable %}

                                        {% set sortable             = true %}
                                        {% set current              = datagrid.values._sort_by == field_description %}
                                        {% set sort_parameters      = admin.modelmanager.sortparameters(field_description, datagrid) %}
                                        {% set sort_active_class    = current ? 'sonata-ba-list-field-order-active' : '' %}
                                        {% set sort_by              = current ? datagrid.values._sort_order : field_description.options._sort_order %}

                                        {% if sortable %}
                                            <a href="{{ admin.generateUrl('init_ckeditor_browser', urlParams|merge(sort_parameters)) }}" class="btn btn-sm btn-{{ sort_active_class ? 'primary':'default' }}">{% endif %}
                                        {% if sort_active_class %}
                                            <i class="icon icon-chevron-{{ sort_by|lower == 'desc'? 'up':'down' }}"></i>
                                        {% endif %}
                                        {{ admin.trans(field_description.label) }}
                                        </a>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"><p>&nbsp;</p></div>
                    {% if datagrid.results|length > 0 %}
                        <div>
                            {% block table_body %}
                                <div class="row-fluid">
                                    {% for object in datagrid.results %}
                                        {% set path = 'networking_init_cms_file_download' %}
                                        {% if object.width %}
                                            {% set path = 'networking_init_cms_image_view' %}
                                        {% endif %}

                                        {% if object.width is defined and object.width %}
                                            {% if object.providerName == 'sonata.media.provider.youtube' %}
                                                {% set previewLink %}//www.youtube.com/embed/{{ object.providerreference }}?autoplay=1{% endset %}
                                                {% set previewType = 'iframe'%}
                                                {% set iframeWidth = '600px' %}
                                                {% set iframeHeight = '300px' %}
                                            {% elseif object.providerName == 'sonata.media.provider.vimeo' %}
                                                {% set previewLink %}//player.vimeo.com/video/{{ object.providerreference }}?autoplay=1{% endset %}
                                                {% set previewType = 'iframe'%}
                                                {% set iframeWidth = '600px' %}
                                                {% set iframeHeight = '300px' %}
                                            {% else %}
                                                {% set previewLink %}{% path object, 'reference' %}{% endset %}
                                                {% set previewType = 'image'%}
                                            {% endif %}
                                        {% else %}
                                            {% set previewLink %}//docs.google.com/gview?url={{ app.request.getSchemeAndHttpHost() }}{% path object, 'reference' %}&embedded=true{% endset %}
                                            {% set previewType = 'iframe' %}
                                            {% set iframeWidth = '400px' %}
                                            {% set iframeHeight = '560px' %}
                                        {% endif %}

                                        <div class="media-box">
                                            <div id="context-menu-{{ object.id }}">
                                                <ul class="dropdown-menu" role="menu" >
                                                    <li>
                                                        <a href="{{ path(path, {'id': object.id, 'name': object.getMetadataValue('filename')}) }}" tabindex="-1"
                                                           class="select">{{ 'list.label_select'|trans({}, 'MediaAdmin') }}: {{ 'list.label_original'|trans({}, 'MediaAdmin') }}</a>
                                                    </li>
                                                    {% if formats[object.id]|length > 0 %}
                                                        {% if object.width %}
                                                            <li class="divider"></li>
                                                            <li class="disabled"><a tabindex="-1">{{ 'list.label_select'|trans({}, 'MediaAdmin') }} - {{ 'title.formats'|trans({}, 'SonataMediaBundle') }}:</a></li>
                                                            {% for name, format in formats[object.id] %}
                                                                <li><a href="{% path object, name %}" tabindex="-1"
                                                                       class="select">{% if format.width %}{{ 'label.width'|trans({}, 'MediaAdmin') }}: {{ format.width }}{% if format.height %}x {{ 'label.height'|trans({}, 'MediaAdmin') }}: {{ format.height }}{% endif %}px{% endif %}</a>
                                                                </li>
                                                            {% endfor %}
                                                        {% endif %}
                                                    {% endif %}
                                                </ul>
                                            </div>
                                            <div class="thumbnail context">
                                                <div class="media-element" data-toggle="context" data-target="#context-menu-{{ object.id }}">
                                                    <a href="{{ previewLink }}"
                                                        {% if previewType == 'iframe' %}
                                                            data-featherlight-iframe-width="{{ iframeWidth }}"
                                                            data-featherlight-iframe-height="{{ iframeHeight }}"
                                                        {% endif %}
                                                       data-featherlight-variant="initcms-featherlight"
                                                       data-featherlight="{{ previewType }}"
                                                       class="image-preview-link" title="{{ object.name }}">
                                                        {% if object.width is defined and object.width %}
                                                            <img src="{% path object, 'reference' %}" class="img-responsive" height="120" />
                                                        {% else %}
                                                            <i class="{{ get_file_icon(object.getMetadataValue('filename')) }}"></i>
                                                        {% endif %}
                                                    </a>
                                                </div>
                                                <div class="media-title small" data-toggle="context" data-target="#context-menu-{{ object.id }}">
                                                    <a href="{{ path(path, {'id': object.id, 'name': object.getMetadataValue('filename')}) }}"
                                                       class="select show-tooltip" data-original-title="{{ object.name }}">{{ object.name }}</a> <br/>
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endblock %}

                            {% block table_footer %}

                                <div class="row-fluid">

                                            <div class="span3 text-right pull-right">
                                                {% transchoice datagrid.pager.nbresults with {'%count%': datagrid.pager.nbresults} from 'SonataAdminBundle' %}
                                                list_results_count{% endtranschoice %}
                                                {% block max_per_page %}
                                                    <label class="control-label"
                                                           for="{{ admin.uniqid }}_per_page">{% trans from 'SonataAdminBundle' %}
                                                        label_per_page{% endtrans %}</label>
                                                    <select class="per-page small" id="{{ admin.uniqid }}_per_page"
                                                            style="width: auto; height: auto">
                                                        {% for per_page in admin.getperpageoptions %}
                                                            <option {% if per_page ==datagrid.pager.maxperpage %}selected="selected"{% endif %}
                                                                    value="{{ admin.generateUrl('init_ckeditor_browser', {'filter':datagrid.values|merge({'_per_page': per_page})}|merge(ckParameters)) }}">
                                                                {{ per_page }}
                                                            </option>
                                                        {% endfor %}
                                                    </select>
                                                {% endblock %}
                                            </div>
                                    {% if datagrid.pager.haveToPaginate() %}
                                    <div class="span3">
                                        <div class="clearfix">&nbsp;</div>
                                        {{ datagrid.pager.page }} / {{ datagrid.pager.lastpage }}</div>
                                        <div class="span6 pagination pagination-centered">
                                            <ul class="pagination-xs">

                                                {% if datagrid.pager.page != 1 %}
                                                    <li>
                                                        <a href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters( datagrid, 1)|merge(ckParameters)) }}"
                                                           title="{{ 'link_first_pager'|trans({}, 'SonataAdminBundle') }}">&laquo;</a>
                                                    </li>
                                                {% endif %}

                                                {% if datagrid.pager.page != datagrid.pager.previouspage %}
                                                    <li>
                                                        <a href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters(  datagrid, datagrid.pager.previouspage)|merge(ckParameters)) }}"
                                                           title="{{ 'link_previous_pager'|trans({}, 'SonataAdminBundle') }}">&lsaquo;</a>
                                                    </li>
                                                {% endif %}

                                                {# Set the number of pages to display in the pager #}
                                                {% for page in datagrid.pager.getLinks() %}
                                                    {% if page == datagrid.pager.page %}
                                                        <li class="active"><a
                                                                    href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters(  datagrid, page)|merge(ckParameters)) }}">{{ page }}</a>
                                                        </li>
                                                    {% else %}
                                                        <li>
                                                            <a href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters(  datagrid, page)|merge(ckParameters)) }}">{{ page }}</a>
                                                        </li>
                                                    {% endif %}
                                                {% endfor %}

                                                {% if datagrid.pager.page != datagrid.pager.nextpage %}
                                                    <li>
                                                        <a href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters(  datagrid, datagrid.pager.nextpage)|merge(ckParameters)) }}"
                                                           title="{{ 'link_next_pager'|trans({}, 'SonataAdminBundle') }}">&rsaquo;</a>
                                                    </li>
                                                {% endif %}

                                                {% if datagrid.pager.page != datagrid.pager.lastpage %}
                                                    <li>
                                                        <a href="{{ admin.generateUrl('init_ckeditor_browser', admin.modelmanager.paginationparameters(  datagrid, datagrid.pager.lastpage)|merge(ckParameters)) }}"
                                                           title="{{ 'link_last_pager'|trans({}, 'SonataAdminBundle') }}">&raquo;</a>
                                                    </li>
                                                {% endif %}

                                            </ul>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endblock %}
                        </div>

                    {% else %}
                        <p class="notice">
                            {{ 'no_result'|trans({}, 'NetworkingInitCmsBundle') }}
                        </p>
                    {% endif %}
                </div>
            </div>
{% endblock %}


