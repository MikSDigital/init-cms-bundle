{% autoescape false %}
<script type="text/javascript">
	(function ($) {
		var nestedExtensions = {
			toArray:function (options) {

				var o = $.extend({}, this.options, options),
						sDepth = o.startDepthCount || 0,
						ret = [],
						left = 1;


				$(this.element).children(o.items).each(function () {
					left = _recursiveArray(this, sDepth + 1, left);
				});

				ret = ret.sort(function (a, b) {
					return (a.left - b.left);
				});

				$.get(
					"{{ admin.generateUrl('ajaxNavigation') }}",
					{
						"operation":"updateNodes",
						"nodes":ret
					}
				);

				return ret;

				function _recursiveArray(item, depth, left) {

					var right = left + 1,
							id,
							pid;

					if ($(item).children(o.listType).children(o.items).length > 0) {
						depth++;
						$(item).children(o.listType).children(o.items).each(function () {
							right = _recursiveArray($(this), depth, right);
						});
						depth--;
					}

					id = ($(item).attr(o.attribute || 'id')).match(o.expression || (/(.+)[-=_](.+)/));

					if (depth === sDepth + 1) {
						pid = o.rootID;
					} else {
						var parentItem = ($(item).parent(o.listType)
								.parent(o.items)
								.attr(o.attribute || 'id'))
								.match(o.expression || (/(.+)[-=_](.+)/));
						pid = parentItem[2];
					}

					if (id) {
						ret.push({"item_id":id[2], "parent_id":pid, "depth":depth, "left":left, "right":right});
					}

					left = right + 1;
					return left;
				}

			}
		};

		$.extend($.mjs.nestedSortable.prototype, nestedExtensions);

		var update = function (e) {
			var nodeArray = $(e).nestedSortable('toArray', {startDepthCount:0});

		}

		var setUpSortTree = function(e, ui){

			$(ui).find('ul:first').nestedSortable({
						disableNesting:'no-nest',
						forcePlaceholderSize:true,
						handle:'div',
						helper:'clone',
						items:'li',
						listType:'ul',
						protectRoot: true,
						opacity:.6,
						placeholder:'placeholder',
						revert:250,
						tabSize:25,
						tolerance:'pointer',
						toleranceElement:'> div',
						update: function(e,ui){ update(this)}
					});
		}

		jQuery('div.navigation').each(setUpSortTree);

	})(jQuery);
</script>
{% endautoescape %}
