{#

This file is part of the Networking package.

(c) net working AG <info@networking.ch>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'NetworkingInitCmsBundle:CRUD:list.html.twig' %}
{% form_theme form 'NetworkingInitCmsBundle:Form:form_admin_fields.html.twig' %}
{% set active_tab = app.request.get('context') %}

{% block preview %}
{% endblock %}

{% block actions %}
{% endblock %}

{% block list_filters %}
    {% set name = persistent_parameters.context ? persistent_parameters.context: 'default' %}
    {% if datagrid.filters %}
        <form action="{{ admin.generateUrl('list') }}" method="GET"
              class="sonata-filter-form {{ admin.isChild and 1 == admin.datagrid.filters|length ? 'hide' : '' }}form-horizontal filters menu-filter">

            <input type="hidden" name="context" value="{{ persistent_parameters.context }}"/>
            {% if persistent_parameters.provider is defined %}
                <input type="hidden" name="provider" value="{{ persistent_parameters.provider }}"/>
            {% endif %}
            <input type="hidden" name="active_tab" value="{{ name }}"/>

            {% set filter_main = '' %}
            {% set filter_hidden = '' %}
            {% set showHiddenFilters = 0 %}
            {% for filter in datagrid.filters if (filter.options.field_type != 'hidden' ) %}
                {% if filter.options.hidden is not defined  or (filter.options.hidden == false) %}
                    {% set filter_main %}
                    {{ filter_main }}
                    <div class="form-group">
                        <label class="control-label col-md-3 filter {{ filter.isActive ? 'active' : 'inactive' }}"> {{ admin.trans(filter.label) }}</label>

                        <div class="form-inline col-md-9">
                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium sonata-filter-option' }}
                            ) }}
                            {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'class': 'input-medium' }}
                            ) }}
                        </div>
                    </div>
                    {% endset %}
                {% else %}
                    {% set filter_hidden %}
                    {% if filter.isActive %}
                        {% set showHiddenFilters = 1 %}
                    {% endif %}
                    {{ filter_hidden }}
                    <div class="form-group">
                        <label class="control-label col-md-3 filter {{ filter.isActive ? 'active' : 'inactive' }}"> {{ admin.trans(filter.label) }}</label>

                        <div class="form-inline col-md-9">
                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':{'class': 'input-medium sonata-filter-option' }}
                            ) }}
                            {{ form_widget(form.children[filter.formName].children['value'], {'attr':{'class': 'input-medium' }}
                            ) }}
                        </div>
                    </div>
                    {% endset %}
                {% endif %}
            {% endfor %}

            {#<strong>{{ 'label_filters'|trans({}, admin.translationDomain) }}</strong>#}
            {% set label = admin.label|trans({}, admin.translationDomain) %}
            <div>
                <div>
                    <fieldset class="filter_legend">
                        <p class="info-soft">{{ 'info.filter'|trans({'%admin_label%':label }, 'NetworkingInitCmsBundle') }}</p>

                        <div class="filter_container row">
                            <div class="col-md-{{ galleryListMode ? '10':'12' }}">
                                {{ filter_main }}
                                <input type="hidden" name="filter[_page]" id="filter__page" value="1"/>
                                {% set foo = form.children['_page'].setRendered() %}
                                <div id="hidden_filters"
                                     class="collapse {{ showHiddenFilters?'in': '' }} hidden_filters">
                                    {% for paramKey, paramValue in admin.persistentParameters %}
                                        <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}"/>
                                    {% endfor %}
                                    {% if filter_hidden != '' %}
                                        {# add div with hidden / show function #}
                                        {{ filter_hidden }}
                                    {% endif %}
                                    {% set foo = form.children['_page'].setRendered() %}
                                </div>
                                <div>
                                    <input type="submit" class="btn btn-default btn-sm"
                                           value="{{ 'btn_filter'|trans({}, 'NetworkingInitCmsBundle') }}"/>
                                    {% if not app.request.isXmlHttpRequest %}
                                        <a href="{{ admin.generateUrl('list', {filters: 'reset'}) }}"
                                           class="link-underlined">
                                            {{ 'link_reset_filter'|trans({'%admin_label%': admin.label}, 'NetworkingInitCmsBundle') }}</a>
                                    {% endif %}
                                    {% if filter_hidden %}
                                        <a data-toggle="collapse" data-target=".hidden_filters"
                                           id="filter_toggle"
                                           class="filter-close cursor-pointer">
                                            {{ 'link.show_more_filters'|trans({}, 'NetworkingInitCmsBundle') }}
                                        </a>
                                    {% endif %}
                                    {{ form_rest(form) }}
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="clearfix">&nbsp;</div>
            </div>
        </form>
    {% endif %}
    <ul class="nav menu-tabs nav-tabs">
        {% if galleryListMode and persistent_parameters.context %}
            <li class="active">
                <a href="{{ admin.generateUrl('list', {'context' : persistent_parameters.context}) }}">{{ ('media_context.' ~ persistent_parameters.context)|trans({}) }}</a>
            </li>

        {% else %}
            {% for name, context in media_pool.contexts %}

                {% if context.providers|length == 0 %}
                    {% set urlParams = {'context' : name} %}
                {% else %}
                    {% set urlParams = {'context' : name, 'provider' : context.providers[0]} %}
                {% endif %}

                {% if name == persistent_parameters.context %}
                    <li class="active"><a
                                href="{{ admin.generateUrl('list', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                    </li>
                {% else %}
                    <li>
                        <a href="{{ admin.generateUrl('list', urlParams) }}">{{ ('media_context.' ~ name)|trans({}) }}</a>
                    </li>
                {% endif %}
            {% endfor %}
        {% endif %}
    </ul>
{% endblock %}

{% block list_table %}
{% if not app.request.isXmlHttpRequest %}
<div id="objectList">
{% endif %}
    <div class="{% if not app.request.isxmlhttprequest %}row{% endif %}">
        <div class="{% if not app.request.isxmlhttprequest %}col-md-12{% endif %}">

        {# provider #}
        <div class="clearfix">&nbsp;</div>

        {# create button #}
        {% if galleryListMode is defined and not galleryListMode %}
            <h1>
                <span class="info-soft">{{ ('media_context.' ~ persistent_parameters.context)|trans({}) }}</span>
                {% set create_text =  'link_action_create'|trans({}, admin.translationDomain) %}
                {% if create_text == 'link_action_create' %}
                    {% set create_text =  'link_action_create'|trans({}, 'SonataAdminBundle') %}
                {% endif %}
                <a class="btn btn-primary btn-sm menu-dialog-link"
                   href="{{ admin.generateUrl('create', {'context' : persistent_parameters.context, 'provider' : null}) }}">
                    <i class="glyphicon glyphicon-plus icon-white"></i> {{ create_text }}
                </a>
            </h1>
            <hr>
        {% endif %}

        {# provider #}
        <div class="row">
            <div class="col-sm-6">
                {% set providers = media_pool.getProviderNamesByContext(persistent_parameters.context) %}
                {% if providers|length > 1 %}
                    <strong>{{ "label.select_provider"|trans({}, 'MediaAdmin') }}</strong>
                    <div class="btn-group btn-group-sm">
                        <a class="btn btn-sm btn-{{ persistent_parameters.provider ? 'default': 'primary' }}"
                           href="{{ admin.generateUrl('list', {'context': persistent_parameters.context, 'provider': null, 'active_tab' : persistent_parameters.context}) }}">{{ "link.all_providers"|trans({}, 'MediaAdmin') }}</a>
                        {% for provider_name in providers %}
                            <a class="btn btn-sm btn-{{ persistent_parameters.provider == provider_name? 'primary':'default' }}"
                               href="{{ admin.generateUrl('list', {'context': persistent_parameters.context, 'provider': provider_name, 'active_tab' : persistent_parameters.context}) }}">{{ provider_name|trans({}) }}</a>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
            <div class="col-sm-6 sort-buttons">
                <strong>{{ 'label.sort_by'|trans({}, 'MediaAdmin') }}:</strong>

                <div class="btn-group btn-group-sm">

                    {% for field_description in admin.list.elements %}
                        {% if field_description.options.sortable is defined and field_description.options.sortable %}

                            {% set sortable             = true %}
                            {% set current              = datagrid.values._sort_by == field_description %}
                            {% set sort_parameters      = admin.modelmanager.sortparameters(field_description, datagrid) %}
                            {% set sort_active_class    = current ? 'sonata-ba-list-field-order-active' : '' %}
                            {% set sort_by              = current ? datagrid.values._sort_order : field_description.options._sort_order %}

                            {% if sortable %}
                                <a href="{{ admin.generateUrl('list', sort_parameters) }}" class="btn btn-sm btn-{{ sort_active_class ? 'primary':'default' }}">{% endif %}
                            {% if sort_active_class %}
                                <i class="glyphicon glyphicon-chevron-{{ sort_by|lower == 'desc'? 'up':'down' }}"></i>
                            {% endif %}
                            {{ admin.trans(field_description.label) }}
                            </a>
                        {% endif %}
                    {% endfor %}
                </div>
            </div>
            <div class="clearfix"><p>&nbsp;</p></div>
        </div>

        {% set batchactions = admin.batchactions %}
        {% set filterParameters = admin.filterParameters|merge({'context': persistent_parameters.context}) %}
        {% if datagrid.results|length > 0 %}
            {% if admin.hasRoute('batch') %}
                <form action="{{ admin.generateUrl('batch', filterParameters) }}" method="POST">
                <input type="hidden" name="_sonata_csrf_token" value="{{ csrf_token }}"/>
            {% endif %}
            <div>
                {% block table_header %}

                {% endblock %}

                {% block table_body %}
                    <div class="row">
                        {% for object in datagrid.results %}
                            {% if object.width is defined and object.width %}
                                {% if object.providerName == 'sonata.media.provider.youtube' %}
                                    {% set previewLink %}//www.youtube.com/?v={{ object.providerreference }}{% endset %}
                                    {% set previewType = 'iframe'%}
                                {% elseif object.providerName == 'sonata.media.provider.vimeo' %}
                                    {% set previewLink %}//player.vimeo.com/video/{{ object.providerreference }}{% endset %}
                                    {% set previewType = 'iframe'%}
                                {% else %}
                                    {% set previewLink %}{% path object, 'reference' %}{% endset %}
                                    {% set previewType = 'image'%}
                                {% endif %}
                            {% else %}
                                {% set previewLink %}https://docs.google.com/gview?url={{ app.request.getSchemeAndHttpHost() }}{% path object, 'reference' %}&embedded=true{% endset %}
                                {% set previewType = 'iframe' %}
                            {% endif %}
                            <div class="media-box">
                                <div id="context-menu-{{ object.id }}">
                                    <ul class="dropdown-menu" role="menu"
                                        aria-labelledby="context-menu_{{ object.id }}">
                                        {% if app.request.isxmlhttprequest %}
                                            <li>
                                                <a class="select-media" href="#" data-object-id="{{ object.id }}">
                                                    {{ 'list.label_select'|trans({}, 'MediaAdmin') }}
                                                </a>
                                            </li>
                                        {% else %}
                                            {% if(admin.isGranted('EDIT', object)) %}
                                                <li><a href="{{ admin.generateObjectUrl('edit', object) }}"
                                                       title="{{ 'action_edit'|trans({}, 'SonataAdminBundle') }}" data-follow="{{ admin.generateObjectUrl('edit', object) }}">
                                                        <i class="glyphicon glyphicon-pencil"></i> {{ 'action_edit'|trans({}, 'SonataAdminBundle') }}
                                                    </a></li>
                                            {% endif %}
                                            <li>
                                                <a href="{{ previewLink }}" class="mfp-{{ previewType }} image-preview-link" title="{{ object.name }}">
                                                    <i class="glyphicon glyphicon-zoom-in"></i> {{ 'action_show'|trans({}, 'SonataAdminBundle') }}
                                                </a>
                                            </li>
                                            {% if(admin.isGranted('DELETE', object)) %}
                                                <li class="divider"></li>
                                                <li><a href="{{ admin.generateObjectUrl('delete', object) }}"
                                                       class="dialog-link"
                                                       id="{{ admin.getClassnameLabel() }}_{{ object.id }}"
                                                       title="{{ 'action_delete'|trans({}, 'SonataAdminBundle') }}">
                                                        <i class="glyphicon glyphicon-trash"></i> {{ 'action_delete'|trans({}, 'SonataAdminBundle') }}
                                                    </a></li>
                                            {% endif %}
                                        {% endif %}
                                    </ul>
                                </div>
                                <div class="thumbnail context" >
                                    <div class="media-element" data-toggle="context" data-target="#context-menu-{{ object.id }}">
                                        <a href="{{ previewLink }}" class="mfp-{{ previewType }} image-preview-link" title="{{ object.name }}">
                                        {% if object.width is defined and object.width %}
                                            <img src="{% path object, 'reference' %}" class="img-responsive" height="120" />
                                        {% else %}
                                            <i class="glyphicon glyphicon-file"></i>
                                        {% endif %}
                                        </a>
                                    </div>
                                    <div class="media-title small" data-toggle="context" data-target="#context-menu-{{ object.id }}">
                                        {% if app.request.isxmlhttprequest %}
                                        <a class="select-media" href="#" data-object-id="{{ object.id }}" data-toggle="tooltip" title="{{ object.name }}" >{{ object.name }}</a>
                                            {% else %}
                                        <a href="{{ admin.generateUrl('edit', {'id' : object.id}) }}" data-toggle="tooltip"  title="{{ object.name }}" >{{ object.name }}</a>
                                            {% endif %}
                                    </div>
                                </div>


                            </div>
                        {% endfor %}
                    </div>
                    <div class="clearfix">&nbsp;</div>
                {% endblock %}

                {% block table_footer %}
                    <div class="row">
                        <div class="col-md-3 col-xs-12 pull-right text-right">
                            <label class="control-label"><strong>{% transchoice datagrid.pager.nbresults with {'%count%': datagrid.pager.nbresults} from 'SonataAdminBundle' %}
                                    list_results_count{% endtranschoice %}</strong>:</label>
                            {% block max_per_page %}
                                <br/>
                                <label class="control-label"
                                       for="{{ admin.uniqid }}_per_page">{% trans from 'SonataAdminBundle' %}
                                    label_per_page{% endtrans %}</label>
                                <select class="per-page small" id="{{ admin.uniqid }}_per_page"
                                        style="width: auto; height: auto">
                                    {% for per_page in admin.getperpageoptions %}
                                        <option {% if per_page ==datagrid.pager.maxperpage %}selected="selected"{% endif %}
                                                value="{{ admin.generateUrl('list', {'filter':datagrid.values|merge({'_per_page': per_page})}) }}">
                                            {{ per_page }}
                                        </option>
                                    {% endfor %}
                                </select>
                            {% endblock %}
                        </div>
                    {% if datagrid.pager.haveToPaginate() %}
                            <div class="pagination col-md-3 hidden-sm hidden-xs">
                                <p >{{ datagrid.pager.page }} / {{ datagrid.pager.lastpage }}</p>

                            </div>
                            <div class="col-md-6 col-xs-12 text-center">
                                <ul class="pagination pagination-xs">

                                    {% if datagrid.pager.page != 1 %}
                                        <li>
                                            <a href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, 1)) }}"
                                               title="{{ 'link_first_pager'|trans({}, 'SonataAdminBundle') }}">&laquo;</a>
                                        </li>
                                    {% endif %}

                                    {% if datagrid.pager.page != datagrid.pager.previouspage %}
                                        <li>
                                            <a href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, datagrid.pager.previouspage)) }}"
                                               title="{{ 'link_previous_pager'|trans({}, 'SonataAdminBundle') }}">&lsaquo;</a>
                                        </li>
                                    {% endif %}

                                    {# Set the number of pages to display in the pager #}
                                    {% for page in datagrid.pager.getLinks() %}
                                        {% if page == datagrid.pager.page %}
                                            <li class="active"><a
                                                        href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, page)) }}">{{ page }}</a>
                                            </li>
                                        {% else %}
                                            <li>
                                                <a href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, page)) }}">{{ page }}</a>
                                            </li>
                                        {% endif %}
                                    {% endfor %}

                                    {% if datagrid.pager.page != datagrid.pager.nextpage %}
                                        <li>
                                            <a href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, datagrid.pager.nextpage)) }}"
                                               title="{{ 'link_next_pager'|trans({}, 'SonataAdminBundle') }}">&rsaquo;</a>
                                        </li>
                                    {% endif %}

                                    {% if datagrid.pager.page != datagrid.pager.lastpage %}
                                        <li>
                                            <a href="{{ admin.generateUrl('list', admin.modelmanager.paginationparameters(datagrid, datagrid.pager.lastpage)) }}"
                                               title="{{ 'link_last_pager'|trans({}, 'SonataAdminBundle') }}">&raquo;</a>
                                        </li>
                                    {% endif %}

                                </ul>
                            </div>
                    {% endif %}
                    </div>
                {% endblock %}
            </div>


            {% if admin.isGranted("EXPORT") and admin.getExportFormats()|length and (galleryListMode is not defined or not galleryListMode) %}
                <p>
                    {{ "label_export_download"|trans({}, "NetworkingInitCmsBundle") }}
                    :

                    {% for format in admin.getExportFormats() %}
                        <a
                        href="{{ admin.generateUrl('export', admin.modelmanager.paginationparameters(datagrid, 0) + {'format' : format}) }}"
                        class="link-underlined">{{ format }}</a>{% if not loop.last %},{% endif %}
                    {% endfor %}
                </p>
            {% endif %}
            {% if admin.hasRoute('batch') %}
                </form>
            {% endif %}
        {% else %}
            <p class="notice">
                {{ 'no_result'|trans({}, 'NetworkingInitCmsBundle') }}
            </p>
        {% endif %}
        </div>
    </div>
{% if not app.request.isXmlHttpRequest %}
</div>
{% else %}
    <script type="text/javascript">
        $(function () {
            Admin.add_filters();
            $('.image-preview-link').magnificPopup(magnificPopupOptions);
        });

    </script>
{% endif %}
{% endblock %}
